"use strict";

/*
 * MikoPBX - free phone system for small business
 * Copyright Â© 2017-2023 Alexey Portnov and Nikolay Beketov
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

/* global globalRootUrl */
var outboundRoutes = {
  initialize: function initialize() {
    $('#routingTable').tableDnD({
      onDrop: outboundRoutes.cbOnDrop,
      onDragClass: 'hoveringRow',
      dragHandle: '.dragHandle'
    });
    $('.rule-row td').on('dblclick', function (e) {
      var id = $(e.target).closest('tr').attr('id');
      window.location = "".concat(globalRootUrl, "outbound-routes/modify/").concat(id);
    });
  },
  cbOnDrop: function cbOnDrop() {
    var priorityWasChanged = false;
    var priorityData = {};
    $('.rule-row').each(function (index, obj) {
      var ruleId = $(obj).attr('id');
      var oldPriority = parseInt($(obj).attr('data-value'), 10);
      var newPriority = obj.rowIndex;

      if (oldPriority !== newPriority) {
        priorityWasChanged = true;
        priorityData[ruleId] = newPriority;
      }
    });

    if (priorityWasChanged) {
      $.api({
        on: 'now',
        url: "".concat(globalRootUrl, "outbound-routes/changePriority"),
        method: 'POST',
        data: priorityData
      });
    }
  }
};
$(document).ready(function () {
  outboundRoutes.initialize();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9PdXRib3VuZFJvdXRlcy9vdXRib3VuZC1yb3V0ZXMtaW5kZXguanMiXSwibmFtZXMiOlsib3V0Ym91bmRSb3V0ZXMiLCJpbml0aWFsaXplIiwiJCIsInRhYmxlRG5EIiwib25Ecm9wIiwiY2JPbkRyb3AiLCJvbkRyYWdDbGFzcyIsImRyYWdIYW5kbGUiLCJvbiIsImUiLCJpZCIsInRhcmdldCIsImNsb3Nlc3QiLCJhdHRyIiwid2luZG93IiwibG9jYXRpb24iLCJnbG9iYWxSb290VXJsIiwicHJpb3JpdHlXYXNDaGFuZ2VkIiwicHJpb3JpdHlEYXRhIiwiZWFjaCIsImluZGV4Iiwib2JqIiwicnVsZUlkIiwib2xkUHJpb3JpdHkiLCJwYXJzZUludCIsIm5ld1ByaW9yaXR5Iiwicm93SW5kZXgiLCJhcGkiLCJ1cmwiLCJtZXRob2QiLCJkYXRhIiwiZG9jdW1lbnQiLCJyZWFkeSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBTUEsY0FBYyxHQUFHO0FBQ3RCQyxFQUFBQSxVQURzQix3QkFDVDtBQUNaQyxJQUFBQSxDQUFDLENBQUMsZUFBRCxDQUFELENBQW1CQyxRQUFuQixDQUE0QjtBQUMzQkMsTUFBQUEsTUFBTSxFQUFFSixjQUFjLENBQUNLLFFBREk7QUFFM0JDLE1BQUFBLFdBQVcsRUFBRSxhQUZjO0FBRzNCQyxNQUFBQSxVQUFVLEVBQUU7QUFIZSxLQUE1QjtBQU1BTCxJQUFBQSxDQUFDLENBQUMsY0FBRCxDQUFELENBQWtCTSxFQUFsQixDQUFxQixVQUFyQixFQUFpQyxVQUFDQyxDQUFELEVBQU87QUFDdkMsVUFBTUMsRUFBRSxHQUFHUixDQUFDLENBQUNPLENBQUMsQ0FBQ0UsTUFBSCxDQUFELENBQVlDLE9BQVosQ0FBb0IsSUFBcEIsRUFBMEJDLElBQTFCLENBQStCLElBQS9CLENBQVg7QUFDQUMsTUFBQUEsTUFBTSxDQUFDQyxRQUFQLGFBQXFCQyxhQUFyQixvQ0FBNEROLEVBQTVEO0FBQ0EsS0FIRDtBQUlBLEdBWnFCO0FBYXRCTCxFQUFBQSxRQWJzQixzQkFhWDtBQUNWLFFBQUlZLGtCQUFrQixHQUFHLEtBQXpCO0FBQ0EsUUFBTUMsWUFBWSxHQUFHLEVBQXJCO0FBQ0FoQixJQUFBQSxDQUFDLENBQUMsV0FBRCxDQUFELENBQWVpQixJQUFmLENBQW9CLFVBQUNDLEtBQUQsRUFBUUMsR0FBUixFQUFnQjtBQUNuQyxVQUFNQyxNQUFNLEdBQUdwQixDQUFDLENBQUNtQixHQUFELENBQUQsQ0FBT1IsSUFBUCxDQUFZLElBQVosQ0FBZjtBQUNBLFVBQU1VLFdBQVcsR0FBR0MsUUFBUSxDQUFDdEIsQ0FBQyxDQUFDbUIsR0FBRCxDQUFELENBQU9SLElBQVAsQ0FBWSxZQUFaLENBQUQsRUFBNEIsRUFBNUIsQ0FBNUI7QUFDQSxVQUFNWSxXQUFXLEdBQUdKLEdBQUcsQ0FBQ0ssUUFBeEI7O0FBQ0EsVUFBSUgsV0FBVyxLQUFLRSxXQUFwQixFQUFpQztBQUNoQ1IsUUFBQUEsa0JBQWtCLEdBQUcsSUFBckI7QUFDQUMsUUFBQUEsWUFBWSxDQUFDSSxNQUFELENBQVosR0FBcUJHLFdBQXJCO0FBQ0E7QUFDRCxLQVJEOztBQVNBLFFBQUlSLGtCQUFKLEVBQXdCO0FBQ3ZCZixNQUFBQSxDQUFDLENBQUN5QixHQUFGLENBQU07QUFDTG5CLFFBQUFBLEVBQUUsRUFBRSxLQURDO0FBRUxvQixRQUFBQSxHQUFHLFlBQUtaLGFBQUwsbUNBRkU7QUFHTGEsUUFBQUEsTUFBTSxFQUFFLE1BSEg7QUFJTEMsUUFBQUEsSUFBSSxFQUFFWjtBQUpELE9BQU47QUFNQTtBQUNEO0FBakNxQixDQUF2QjtBQW9DQWhCLENBQUMsQ0FBQzZCLFFBQUQsQ0FBRCxDQUFZQyxLQUFaLENBQWtCLFlBQU07QUFDdkJoQyxFQUFBQSxjQUFjLENBQUNDLFVBQWY7QUFDQSxDQUZEIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIE1pa29QQlggLSBmcmVlIHBob25lIHN5c3RlbSBmb3Igc21hbGwgYnVzaW5lc3NcbiAqIENvcHlyaWdodCDCqSAyMDE3LTIwMjMgQWxleGV5IFBvcnRub3YgYW5kIE5pa29sYXkgQmVrZXRvdlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbjsgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS5cbiAqIElmIG5vdCwgc2VlIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKi9cblxuLyogZ2xvYmFsIGdsb2JhbFJvb3RVcmwgKi9cbmNvbnN0IG91dGJvdW5kUm91dGVzID0ge1xuXHRpbml0aWFsaXplKCkge1xuXHRcdCQoJyNyb3V0aW5nVGFibGUnKS50YWJsZURuRCh7XG5cdFx0XHRvbkRyb3A6IG91dGJvdW5kUm91dGVzLmNiT25Ecm9wLFxuXHRcdFx0b25EcmFnQ2xhc3M6ICdob3ZlcmluZ1JvdycsXG5cdFx0XHRkcmFnSGFuZGxlOiAnLmRyYWdIYW5kbGUnLFxuXHRcdH0pO1xuXG5cdFx0JCgnLnJ1bGUtcm93IHRkJykub24oJ2RibGNsaWNrJywgKGUpID0+IHtcblx0XHRcdGNvbnN0IGlkID0gJChlLnRhcmdldCkuY2xvc2VzdCgndHInKS5hdHRyKCdpZCcpO1xuXHRcdFx0d2luZG93LmxvY2F0aW9uID0gYCR7Z2xvYmFsUm9vdFVybH1vdXRib3VuZC1yb3V0ZXMvbW9kaWZ5LyR7aWR9YDtcblx0XHR9KTtcblx0fSxcblx0Y2JPbkRyb3AoKSB7XG5cdFx0bGV0IHByaW9yaXR5V2FzQ2hhbmdlZCA9IGZhbHNlO1xuXHRcdGNvbnN0IHByaW9yaXR5RGF0YSA9IHt9O1xuXHRcdCQoJy5ydWxlLXJvdycpLmVhY2goKGluZGV4LCBvYmopID0+IHtcblx0XHRcdGNvbnN0IHJ1bGVJZCA9ICQob2JqKS5hdHRyKCdpZCcpO1xuXHRcdFx0Y29uc3Qgb2xkUHJpb3JpdHkgPSBwYXJzZUludCgkKG9iaikuYXR0cignZGF0YS12YWx1ZScpLCAxMCk7XG5cdFx0XHRjb25zdCBuZXdQcmlvcml0eSA9IG9iai5yb3dJbmRleDtcblx0XHRcdGlmIChvbGRQcmlvcml0eSAhPT0gbmV3UHJpb3JpdHkpIHtcblx0XHRcdFx0cHJpb3JpdHlXYXNDaGFuZ2VkID0gdHJ1ZTtcblx0XHRcdFx0cHJpb3JpdHlEYXRhW3J1bGVJZF09bmV3UHJpb3JpdHk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0aWYgKHByaW9yaXR5V2FzQ2hhbmdlZCkge1xuXHRcdFx0JC5hcGkoe1xuXHRcdFx0XHRvbjogJ25vdycsXG5cdFx0XHRcdHVybDogYCR7Z2xvYmFsUm9vdFVybH1vdXRib3VuZC1yb3V0ZXMvY2hhbmdlUHJpb3JpdHlgLFxuXHRcdFx0XHRtZXRob2Q6ICdQT1NUJyxcblx0XHRcdFx0ZGF0YTogcHJpb3JpdHlEYXRhLFxuXHRcdFx0fSk7XG5cdFx0fVxuXHR9LFxufTtcblxuJChkb2N1bWVudCkucmVhZHkoKCkgPT4ge1xuXHRvdXRib3VuZFJvdXRlcy5pbml0aWFsaXplKCk7XG59KTtcbiJdfQ==