"use strict";

/*
 * MikoPBX - free phone system for small business
 * Copyright © 2017-2023 Alexey Portnov and Nikolay Beketov
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

/* global globalRootUrl,globalTranslate, Extensions, Form  */
// Проверка нет ли ошибки занятого другой учеткой номера
$.fn.form.settings.rules.existRule = function (value, parameter) {
  return $("#".concat(parameter)).hasClass('hidden');
};

var conference = {
  $number: $('#extension'),
  $formObj: $('#conference-room-form'),
  defaultExtension: '',
  validateRules: {
    name: {
      identifier: 'name',
      rules: [{
        type: 'empty',
        prompt: globalTranslate.cr_ValidateNameEmpty
      }]
    },
    extension: {
      identifier: 'extension',
      rules: [{
        type: 'number',
        prompt: globalTranslate.cr_ValidateExtensionNumber
      }, {
        type: 'minLength[2]',
        prompt: globalTranslate.cr_ValidateExtensionLen
      }, {
        type: 'empty',
        prompt: globalTranslate.cr_ValidateExtensionEmpty
      }, {
        type: 'existRule[extension-error]',
        prompt: globalTranslate.cr_ValidateExtensionDouble
      }]
    },
    pinCode: {
      identifier: 'pinCode',
      rules: [{
        type: 'number',
        prompt: globalTranslate.cr_ValidatePinNumber
      }]
    }
  },
  initialize: function initialize() {
    // Динамическая проверка свободен ли внутренний номер
    conference.$number.on('change', function () {
      var newNumber = conference.$formObj.form('get value', 'extension');
      Extensions.checkAvailability(conference.defaultNumber, newNumber);
    });
    conference.initializeForm();
    conference.defaultExtension = conference.$formObj.form('get value', 'extension');
  },
  cbBeforeSendForm: function cbBeforeSendForm(settings) {
    var result = settings;
    result.data = conference.$formObj.form('get values');
    return result;
  },
  cbAfterSendForm: function cbAfterSendForm() {},
  initializeForm: function initializeForm() {
    Form.$formObj = conference.$formObj;
    Form.url = "".concat(globalRootUrl, "conference-rooms/save");
    Form.validateRules = conference.validateRules;
    Form.cbBeforeSendForm = conference.cbBeforeSendForm;
    Form.cbAfterSendForm = conference.cbAfterSendForm;
    Form.initialize();
  }
};
$(document).ready(function () {
  conference.initialize();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,