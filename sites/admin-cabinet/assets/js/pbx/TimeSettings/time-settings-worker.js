"use strict";

/*
 * MikoPBX - free phone system for small business
 * Copyright Â© 2017-2023 Alexey Portnov and Nikolay Beketov
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

/* global moment */
var clockWorker = {
  timeoutHandle: null,
  options: null,
  initialize: function initialize() {
    clockWorker.restartWorker();
  },
  restartWorker: function restartWorker() {
    window.clearTimeout(clockWorker.timeoutHandle);
    clockWorker.worker();
  },
  worker: function worker() {
    PbxApi.GetDateTime(clockWorker.cbAfterReceiveDateTimeFromServer);
  },
  cbAfterReceiveDateTimeFromServer: function cbAfterReceiveDateTimeFromServer(response) {
    var options = {
      timeZone: timeSettings.$formObj.form('get value', 'PBXTimezone'),
      timeZoneName: 'short'
    };

    if (timeSettings.$formObj.form('get value', 'PBXManualTimeSettings') !== 'on') {
      clockWorker.timeoutHandle = window.setTimeout(clockWorker.worker, 1000);
    } else {
      options.timeZoneName = undefined;
    }

    if (response !== false) {
      var dateTime = new Date(response.timestamp * 1000);
      moment.locale(globalWebAdminLanguage);
      var m = moment(dateTime); //timeSettings.$formObj.form('set value', 'ManualDateTime', dateTime.toLocaleString(globalWebAdminLanguage, options));

      timeSettings.$formObj.form('set value', 'ManualDateTime', m.tz(options.timeZone).format());
    }
  }
};
$(document).ready(function () {
  clockWorker.initialize();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9UaW1lU2V0dGluZ3MvdGltZS1zZXR0aW5ncy13b3JrZXIuanMiXSwibmFtZXMiOlsiY2xvY2tXb3JrZXIiLCJ0aW1lb3V0SGFuZGxlIiwib3B0aW9ucyIsImluaXRpYWxpemUiLCJyZXN0YXJ0V29ya2VyIiwid2luZG93IiwiY2xlYXJUaW1lb3V0Iiwid29ya2VyIiwiUGJ4QXBpIiwiR2V0RGF0ZVRpbWUiLCJjYkFmdGVyUmVjZWl2ZURhdGVUaW1lRnJvbVNlcnZlciIsInJlc3BvbnNlIiwidGltZVpvbmUiLCJ0aW1lU2V0dGluZ3MiLCIkZm9ybU9iaiIsImZvcm0iLCJ0aW1lWm9uZU5hbWUiLCJzZXRUaW1lb3V0IiwidW5kZWZpbmVkIiwiZGF0ZVRpbWUiLCJEYXRlIiwidGltZXN0YW1wIiwibW9tZW50IiwibG9jYWxlIiwiZ2xvYmFsV2ViQWRtaW5MYW5ndWFnZSIsIm0iLCJ0eiIsImZvcm1hdCIsIiQiLCJkb2N1bWVudCIsInJlYWR5Il0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQSxJQUFNQSxXQUFXLEdBQUc7QUFDbkJDLEVBQUFBLGFBQWEsRUFBRSxJQURJO0FBRW5CQyxFQUFBQSxPQUFPLEVBQUUsSUFGVTtBQUduQkMsRUFBQUEsVUFIbUIsd0JBR047QUFDWkgsSUFBQUEsV0FBVyxDQUFDSSxhQUFaO0FBQ0EsR0FMa0I7QUFNbkJBLEVBQUFBLGFBTm1CLDJCQU1IO0FBQ2ZDLElBQUFBLE1BQU0sQ0FBQ0MsWUFBUCxDQUFvQk4sV0FBVyxDQUFDQyxhQUFoQztBQUNBRCxJQUFBQSxXQUFXLENBQUNPLE1BQVo7QUFDQSxHQVRrQjtBQVVuQkEsRUFBQUEsTUFWbUIsb0JBVVY7QUFDUkMsSUFBQUEsTUFBTSxDQUFDQyxXQUFQLENBQW1CVCxXQUFXLENBQUNVLGdDQUEvQjtBQUNBLEdBWmtCO0FBY25CQSxFQUFBQSxnQ0FkbUIsNENBY2NDLFFBZGQsRUFjdUI7QUFDekMsUUFBTVQsT0FBTyxHQUFHO0FBQUVVLE1BQUFBLFFBQVEsRUFBRUMsWUFBWSxDQUFDQyxRQUFiLENBQXNCQyxJQUF0QixDQUEyQixXQUEzQixFQUF3QyxhQUF4QyxDQUFaO0FBQW9FQyxNQUFBQSxZQUFZLEVBQUc7QUFBbkYsS0FBaEI7O0FBQ0EsUUFBSUgsWUFBWSxDQUFDQyxRQUFiLENBQXNCQyxJQUF0QixDQUEyQixXQUEzQixFQUF3Qyx1QkFBeEMsTUFBcUUsSUFBekUsRUFBK0U7QUFDOUVmLE1BQUFBLFdBQVcsQ0FBQ0MsYUFBWixHQUE0QkksTUFBTSxDQUFDWSxVQUFQLENBQzNCakIsV0FBVyxDQUFDTyxNQURlLEVBRTNCLElBRjJCLENBQTVCO0FBSUEsS0FMRCxNQUtPO0FBQ05MLE1BQUFBLE9BQU8sQ0FBQ2MsWUFBUixHQUF1QkUsU0FBdkI7QUFDQTs7QUFDRCxRQUFJUCxRQUFRLEtBQUcsS0FBZixFQUFxQjtBQUVwQixVQUFNUSxRQUFRLEdBQUksSUFBSUMsSUFBSixDQUFTVCxRQUFRLENBQUNVLFNBQVQsR0FBbUIsSUFBNUIsQ0FBbEI7QUFDQUMsTUFBQUEsTUFBTSxDQUFDQyxNQUFQLENBQWNDLHNCQUFkO0FBQ0EsVUFBTUMsQ0FBQyxHQUFHSCxNQUFNLENBQUNILFFBQUQsQ0FBaEIsQ0FKb0IsQ0FLcEI7O0FBQ0FOLE1BQUFBLFlBQVksQ0FBQ0MsUUFBYixDQUFzQkMsSUFBdEIsQ0FBMkIsV0FBM0IsRUFBd0MsZ0JBQXhDLEVBQXlEVSxDQUFDLENBQUNDLEVBQUYsQ0FBS3hCLE9BQU8sQ0FBQ1UsUUFBYixFQUF1QmUsTUFBdkIsRUFBekQ7QUFDQTtBQUNEO0FBaENrQixDQUFwQjtBQW1DQUMsQ0FBQyxDQUFDQyxRQUFELENBQUQsQ0FBWUMsS0FBWixDQUFrQixZQUFNO0FBQ3ZCOUIsRUFBQUEsV0FBVyxDQUFDRyxVQUFaO0FBQ0EsQ0FGRCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBNaWtvUEJYIC0gZnJlZSBwaG9uZSBzeXN0ZW0gZm9yIHNtYWxsIGJ1c2luZXNzXG4gKiBDb3B5cmlnaHQgwqkgMjAxNy0yMDIzIEFsZXhleSBQb3J0bm92IGFuZCBOaWtvbGF5IEJla2V0b3ZcbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uXG4gKiBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICovXG5cbi8qIGdsb2JhbCBtb21lbnQgKi9cblxuY29uc3QgY2xvY2tXb3JrZXIgPSB7XG5cdHRpbWVvdXRIYW5kbGU6IG51bGwsXG5cdG9wdGlvbnM6IG51bGwsXG5cdGluaXRpYWxpemUoKSB7XG5cdFx0Y2xvY2tXb3JrZXIucmVzdGFydFdvcmtlcigpO1xuXHR9LFxuXHRyZXN0YXJ0V29ya2VyKCkge1xuXHRcdHdpbmRvdy5jbGVhclRpbWVvdXQoY2xvY2tXb3JrZXIudGltZW91dEhhbmRsZSk7XG5cdFx0Y2xvY2tXb3JrZXIud29ya2VyKCk7XG5cdH0sXG5cdHdvcmtlcigpIHtcblx0XHRQYnhBcGkuR2V0RGF0ZVRpbWUoY2xvY2tXb3JrZXIuY2JBZnRlclJlY2VpdmVEYXRlVGltZUZyb21TZXJ2ZXIpO1xuXHR9LFxuXG5cdGNiQWZ0ZXJSZWNlaXZlRGF0ZVRpbWVGcm9tU2VydmVyKHJlc3BvbnNlKXtcblx0XHRjb25zdCBvcHRpb25zID0geyB0aW1lWm9uZTogdGltZVNldHRpbmdzLiRmb3JtT2JqLmZvcm0oJ2dldCB2YWx1ZScsICdQQlhUaW1lem9uZScpLCB0aW1lWm9uZU5hbWUgOiAnc2hvcnQnfTtcblx0XHRpZiAodGltZVNldHRpbmdzLiRmb3JtT2JqLmZvcm0oJ2dldCB2YWx1ZScsICdQQlhNYW51YWxUaW1lU2V0dGluZ3MnKSAhPT0gJ29uJykge1xuXHRcdFx0Y2xvY2tXb3JrZXIudGltZW91dEhhbmRsZSA9IHdpbmRvdy5zZXRUaW1lb3V0KFxuXHRcdFx0XHRjbG9ja1dvcmtlci53b3JrZXIsXG5cdFx0XHRcdDEwMDAsXG5cdFx0XHQpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRvcHRpb25zLnRpbWVab25lTmFtZSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0aWYgKHJlc3BvbnNlIT09ZmFsc2Upe1xuXG5cdFx0XHRjb25zdCBkYXRlVGltZSA9ICBuZXcgRGF0ZShyZXNwb25zZS50aW1lc3RhbXAqMTAwMCk7XG5cdFx0XHRtb21lbnQubG9jYWxlKGdsb2JhbFdlYkFkbWluTGFuZ3VhZ2UpO1xuXHRcdFx0Y29uc3QgbSA9IG1vbWVudChkYXRlVGltZSwpO1xuXHRcdFx0Ly90aW1lU2V0dGluZ3MuJGZvcm1PYmouZm9ybSgnc2V0IHZhbHVlJywgJ01hbnVhbERhdGVUaW1lJywgZGF0ZVRpbWUudG9Mb2NhbGVTdHJpbmcoZ2xvYmFsV2ViQWRtaW5MYW5ndWFnZSwgb3B0aW9ucykpO1xuXHRcdFx0dGltZVNldHRpbmdzLiRmb3JtT2JqLmZvcm0oJ3NldCB2YWx1ZScsICdNYW51YWxEYXRlVGltZScsbS50eihvcHRpb25zLnRpbWVab25lKS5mb3JtYXQoKSk7XG5cdFx0fVxuXHR9XG59O1xuXG4kKGRvY3VtZW50KS5yZWFkeSgoKSA9PiB7XG5cdGNsb2NrV29ya2VyLmluaXRpYWxpemUoKTtcbn0pO1xuIl19