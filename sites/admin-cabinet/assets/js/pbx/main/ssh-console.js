"use strict";

/*
 * MikoPBX - free phone system for small business
 * Copyright Â© 2017-2023 Alexey Portnov and Nikolay Beketov
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

/* global globalRootUrl */
var sshConsole = {
  $menuLink: $("a[href$=\"".concat(globalRootUrl, "console/index/\"]")),
  link: null,
  target: null,
  hide: false,
  initialize: function initialize() {
    if (!sshConsole.$menuLink) {
      return;
    }

    var connectionAddress = sshConsole.$menuLink.attr('data-value');
    var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor) && !navigator.userAgent.match(/Opera|OPR\//);

    if (isChrome) {
      sshConsole.detect('chrome-extension://iodihamcpbpeioajjeobimgagajmlibd', function () {
        sshConsole.link = "chrome-extension://iodihamcpbpeioajjeobimgagajmlibd/html/nassh.html#".concat(connectionAddress);
        sshConsole.target = '_blank';
      }, function () {
        sshConsole.link = 'https://chrome.google.com/webstore/detail/iodihamcpbpeioajjeobimgagajmlibd';
        sshConsole.target = '_blank';
      });
      $('body').on('click', "a[href$=\"".concat(globalRootUrl, "console/index/\"]"), function (e) {
        e.preventDefault();
        window.open(sshConsole.link, sshConsole.target);
      });
    } else {
      sshConsole.$menuLink.hide();
    }
  },
  detect: function detect(base, ifInstalled, ifNotInstalled) {
    $.get("".concat(base, "/html/nassh.html")).done(ifInstalled).fail(ifNotInstalled);
  }
};
$(document).ready(function () {
  sshConsole.initialize();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYWluL3NzaC1jb25zb2xlLmpzIl0sIm5hbWVzIjpbInNzaENvbnNvbGUiLCIkbWVudUxpbmsiLCIkIiwiZ2xvYmFsUm9vdFVybCIsImxpbmsiLCJ0YXJnZXQiLCJoaWRlIiwiaW5pdGlhbGl6ZSIsImNvbm5lY3Rpb25BZGRyZXNzIiwiYXR0ciIsImlzQ2hyb21lIiwidGVzdCIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsInZlbmRvciIsIm1hdGNoIiwiZGV0ZWN0Iiwib24iLCJlIiwicHJldmVudERlZmF1bHQiLCJ3aW5kb3ciLCJvcGVuIiwiYmFzZSIsImlmSW5zdGFsbGVkIiwiaWZOb3RJbnN0YWxsZWQiLCJnZXQiLCJkb25lIiwiZmFpbCIsImRvY3VtZW50IiwicmVhZHkiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUVBLElBQU1BLFVBQVUsR0FBRztBQUNsQkMsRUFBQUEsU0FBUyxFQUFFQyxDQUFDLHFCQUFhQyxhQUFiLHVCQURNO0FBRWxCQyxFQUFBQSxJQUFJLEVBQUUsSUFGWTtBQUdsQkMsRUFBQUEsTUFBTSxFQUFFLElBSFU7QUFJbEJDLEVBQUFBLElBQUksRUFBRSxLQUpZO0FBS2xCQyxFQUFBQSxVQUxrQix3QkFLTDtBQUNaLFFBQUksQ0FBQ1AsVUFBVSxDQUFDQyxTQUFoQixFQUEwQjtBQUN6QjtBQUNBOztBQUNELFFBQUlPLGlCQUFpQixHQUFHUixVQUFVLENBQUNDLFNBQVgsQ0FBcUJRLElBQXJCLENBQTBCLFlBQTFCLENBQXhCO0FBQ0EsUUFBTUMsUUFBUSxHQUFHLFNBQVNDLElBQVQsQ0FBY0MsU0FBUyxDQUFDQyxTQUF4QixLQUFzQyxhQUFhRixJQUFiLENBQWtCQyxTQUFTLENBQUNFLE1BQTVCLENBQXRDLElBQTZFLENBQUVGLFNBQVMsQ0FBQ0MsU0FBVixDQUFvQkUsS0FBcEIsQ0FBMEIsYUFBMUIsQ0FBaEc7O0FBQ0EsUUFBSUwsUUFBSixFQUFjO0FBQ2JWLE1BQUFBLFVBQVUsQ0FBQ2dCLE1BQVgsQ0FDQyxxREFERCxFQUVDLFlBQU07QUFDTGhCLFFBQUFBLFVBQVUsQ0FBQ0ksSUFBWCxpRkFBeUZJLGlCQUF6RjtBQUNBUixRQUFBQSxVQUFVLENBQUNLLE1BQVgsR0FBb0IsUUFBcEI7QUFDQSxPQUxGLEVBTUMsWUFBTTtBQUNMTCxRQUFBQSxVQUFVLENBQUNJLElBQVgsR0FBa0IsNEVBQWxCO0FBQ0FKLFFBQUFBLFVBQVUsQ0FBQ0ssTUFBWCxHQUFvQixRQUFwQjtBQUNBLE9BVEY7QUFXQUgsTUFBQUEsQ0FBQyxDQUFDLE1BQUQsQ0FBRCxDQUFVZSxFQUFWLENBQWEsT0FBYixzQkFBa0NkLGFBQWxDLHdCQUFtRSxVQUFDZSxDQUFELEVBQU87QUFDekVBLFFBQUFBLENBQUMsQ0FBQ0MsY0FBRjtBQUNBQyxRQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWXJCLFVBQVUsQ0FBQ0ksSUFBdkIsRUFBNkJKLFVBQVUsQ0FBQ0ssTUFBeEM7QUFDQSxPQUhEO0FBSUEsS0FoQkQsTUFnQk87QUFDTkwsTUFBQUEsVUFBVSxDQUFDQyxTQUFYLENBQXFCSyxJQUFyQjtBQUNBO0FBQ0QsR0E5QmlCO0FBK0JsQlUsRUFBQUEsTUEvQmtCLGtCQStCWE0sSUEvQlcsRUErQkxDLFdBL0JLLEVBK0JRQyxjQS9CUixFQStCd0I7QUFDekN0QixJQUFBQSxDQUFDLENBQUN1QixHQUFGLFdBQVNILElBQVQsdUJBQ0VJLElBREYsQ0FDT0gsV0FEUCxFQUVFSSxJQUZGLENBRU9ILGNBRlA7QUFHQTtBQW5DaUIsQ0FBbkI7QUF1Q0F0QixDQUFDLENBQUMwQixRQUFELENBQUQsQ0FBWUMsS0FBWixDQUFrQixZQUFNO0FBQ3ZCN0IsRUFBQUEsVUFBVSxDQUFDTyxVQUFYO0FBQ0EsQ0FGRCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBNaWtvUEJYIC0gZnJlZSBwaG9uZSBzeXN0ZW0gZm9yIHNtYWxsIGJ1c2luZXNzXG4gKiBDb3B5cmlnaHQgwqkgMjAxNy0yMDIzIEFsZXhleSBQb3J0bm92IGFuZCBOaWtvbGF5IEJla2V0b3ZcbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uXG4gKiBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICovXG4vKiBnbG9iYWwgZ2xvYmFsUm9vdFVybCAqL1xuXG5jb25zdCBzc2hDb25zb2xlID0ge1xuXHQkbWVudUxpbms6ICQoYGFbaHJlZiQ9XCIke2dsb2JhbFJvb3RVcmx9Y29uc29sZS9pbmRleC9cIl1gKSxcblx0bGluazogbnVsbCxcblx0dGFyZ2V0OiBudWxsLFxuXHRoaWRlOiBmYWxzZSxcblx0aW5pdGlhbGl6ZSgpIHtcblx0XHRpZiAoIXNzaENvbnNvbGUuJG1lbnVMaW5rKXtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0bGV0IGNvbm5lY3Rpb25BZGRyZXNzID0gc3NoQ29uc29sZS4kbWVudUxpbmsuYXR0cignZGF0YS12YWx1ZScpO1xuXHRcdGNvbnN0IGlzQ2hyb21lID0gL0Nocm9tZS8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSAmJiAvR29vZ2xlIEluYy8udGVzdChuYXZpZ2F0b3IudmVuZG9yKSAmJiAhKG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL09wZXJhfE9QUlxcLy8pKTtcblx0XHRpZiAoaXNDaHJvbWUpIHtcblx0XHRcdHNzaENvbnNvbGUuZGV0ZWN0KFxuXHRcdFx0XHQnY2hyb21lLWV4dGVuc2lvbjovL2lvZGloYW1jcGJwZWlvYWpqZW9iaW1nYWdham1saWJkJyxcblx0XHRcdFx0KCkgPT4ge1xuXHRcdFx0XHRcdHNzaENvbnNvbGUubGluayA9IGBjaHJvbWUtZXh0ZW5zaW9uOi8vaW9kaWhhbWNwYnBlaW9hamplb2JpbWdhZ2FqbWxpYmQvaHRtbC9uYXNzaC5odG1sIyR7Y29ubmVjdGlvbkFkZHJlc3N9YDtcblx0XHRcdFx0XHRzc2hDb25zb2xlLnRhcmdldCA9ICdfYmxhbmsnO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHQoKSA9PiB7XG5cdFx0XHRcdFx0c3NoQ29uc29sZS5saW5rID0gJ2h0dHBzOi8vY2hyb21lLmdvb2dsZS5jb20vd2Vic3RvcmUvZGV0YWlsL2lvZGloYW1jcGJwZWlvYWpqZW9iaW1nYWdham1saWJkJztcblx0XHRcdFx0XHRzc2hDb25zb2xlLnRhcmdldCA9ICdfYmxhbmsnO1xuXHRcdFx0XHR9LFxuXHRcdFx0KTtcblx0XHRcdCQoJ2JvZHknKS5vbignY2xpY2snLCBgYVtocmVmJD1cIiR7Z2xvYmFsUm9vdFVybH1jb25zb2xlL2luZGV4L1wiXWAsIChlKSA9PiB7XG5cdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0d2luZG93Lm9wZW4oc3NoQ29uc29sZS5saW5rLCBzc2hDb25zb2xlLnRhcmdldCk7XG5cdFx0XHR9KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3NoQ29uc29sZS4kbWVudUxpbmsuaGlkZSgpO1xuXHRcdH1cblx0fSxcblx0ZGV0ZWN0KGJhc2UsIGlmSW5zdGFsbGVkLCBpZk5vdEluc3RhbGxlZCkge1xuXHRcdCQuZ2V0KGAke2Jhc2V9L2h0bWwvbmFzc2guaHRtbGApXG5cdFx0XHQuZG9uZShpZkluc3RhbGxlZClcblx0XHRcdC5mYWlsKGlmTm90SW5zdGFsbGVkKTtcblx0fSxcbn07XG5cblxuJChkb2N1bWVudCkucmVhZHkoKCkgPT4ge1xuXHRzc2hDb25zb2xlLmluaXRpYWxpemUoKTtcbn0pO1xuIl19