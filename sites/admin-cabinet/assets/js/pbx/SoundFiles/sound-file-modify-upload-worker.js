"use strict";

/*
 * MikoPBX - free phone system for small business
 * Copyright (C) 2017-2023 Alexey Portnov and Nikolay Beketov
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

/* global globalTranslate,  PbxApi */
var mergingCheckWorker = {
  timeOut: 3000,
  timeOutHandle: '',
  errorCounts: 0,
  fileID: null,
  filePath: '',
  initialize: function initialize(fileID, filePath) {
    // Запустим обновление статуса провайдера
    mergingCheckWorker.fileID = fileID;
    mergingCheckWorker.filePath = filePath;
    mergingCheckWorker.restartWorker(fileID);
  },
  restartWorker: function restartWorker() {
    window.clearTimeout(mergingCheckWorker.timeoutHandle);
    mergingCheckWorker.worker();
  },
  worker: function worker() {
    PbxApi.FilesGetStatusUploadFile(mergingCheckWorker.fileID, mergingCheckWorker.cbAfterResponse);
    mergingCheckWorker.timeoutHandle = window.setTimeout(mergingCheckWorker.worker, mergingCheckWorker.timeOut);
  },
  cbAfterResponse: function cbAfterResponse(response) {
    if (mergingCheckWorker.errorCounts > 10) {
      UserMessage.showMultiString(globalTranslate.sf_UploadError);
      soundFileModify.$submitButton.removeClass('loading');
      soundFileModify.$formObj.removeClass('loading');
      window.clearTimeout(mergingCheckWorker.timeoutHandle);
    }

    if (response === undefined || Object.keys(response).length === 0) {
      mergingCheckWorker.errorCounts += 1;
      return;
    }

    if (response.d_status === 'UPLOAD_COMPLETE') {
      var category = soundFileModify.$formObj.form('get value', 'category');
      PbxApi.SystemConvertAudioFile(mergingCheckWorker.filePath, category, soundFileModify.cbAfterConvertFile);
      window.clearTimeout(mergingCheckWorker.timeoutHandle);
    } else if (response.d_status !== undefined) {
      mergingCheckWorker.errorCounts = 0;
    } else {
      mergingCheckWorker.errorCounts += 1;
    }
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Tb3VuZEZpbGVzL3NvdW5kLWZpbGUtbW9kaWZ5LXVwbG9hZC13b3JrZXIuanMiXSwibmFtZXMiOlsibWVyZ2luZ0NoZWNrV29ya2VyIiwidGltZU91dCIsInRpbWVPdXRIYW5kbGUiLCJlcnJvckNvdW50cyIsImZpbGVJRCIsImZpbGVQYXRoIiwiaW5pdGlhbGl6ZSIsInJlc3RhcnRXb3JrZXIiLCJ3aW5kb3ciLCJjbGVhclRpbWVvdXQiLCJ0aW1lb3V0SGFuZGxlIiwid29ya2VyIiwiUGJ4QXBpIiwiRmlsZXNHZXRTdGF0dXNVcGxvYWRGaWxlIiwiY2JBZnRlclJlc3BvbnNlIiwic2V0VGltZW91dCIsInJlc3BvbnNlIiwiVXNlck1lc3NhZ2UiLCJzaG93TXVsdGlTdHJpbmciLCJnbG9iYWxUcmFuc2xhdGUiLCJzZl9VcGxvYWRFcnJvciIsInNvdW5kRmlsZU1vZGlmeSIsIiRzdWJtaXRCdXR0b24iLCJyZW1vdmVDbGFzcyIsIiRmb3JtT2JqIiwidW5kZWZpbmVkIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsImRfc3RhdHVzIiwiY2F0ZWdvcnkiLCJmb3JtIiwiU3lzdGVtQ29udmVydEF1ZGlvRmlsZSIsImNiQWZ0ZXJDb252ZXJ0RmlsZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBRUEsSUFBTUEsa0JBQWtCLEdBQUc7QUFDMUJDLEVBQUFBLE9BQU8sRUFBRSxJQURpQjtBQUUxQkMsRUFBQUEsYUFBYSxFQUFFLEVBRlc7QUFHMUJDLEVBQUFBLFdBQVcsRUFBRSxDQUhhO0FBSTFCQyxFQUFBQSxNQUFNLEVBQUUsSUFKa0I7QUFLMUJDLEVBQUFBLFFBQVEsRUFBRSxFQUxnQjtBQU0xQkMsRUFBQUEsVUFOMEIsc0JBTWZGLE1BTmUsRUFNUEMsUUFOTyxFQU1HO0FBQzVCO0FBQ0FMLElBQUFBLGtCQUFrQixDQUFDSSxNQUFuQixHQUE0QkEsTUFBNUI7QUFDQUosSUFBQUEsa0JBQWtCLENBQUNLLFFBQW5CLEdBQThCQSxRQUE5QjtBQUNBTCxJQUFBQSxrQkFBa0IsQ0FBQ08sYUFBbkIsQ0FBaUNILE1BQWpDO0FBQ0EsR0FYeUI7QUFZMUJHLEVBQUFBLGFBWjBCLDJCQVlWO0FBQ2ZDLElBQUFBLE1BQU0sQ0FBQ0MsWUFBUCxDQUFvQlQsa0JBQWtCLENBQUNVLGFBQXZDO0FBQ0FWLElBQUFBLGtCQUFrQixDQUFDVyxNQUFuQjtBQUNBLEdBZnlCO0FBZ0IxQkEsRUFBQUEsTUFoQjBCLG9CQWdCakI7QUFDUkMsSUFBQUEsTUFBTSxDQUFDQyx3QkFBUCxDQUFnQ2Isa0JBQWtCLENBQUNJLE1BQW5ELEVBQTJESixrQkFBa0IsQ0FBQ2MsZUFBOUU7QUFDQWQsSUFBQUEsa0JBQWtCLENBQUNVLGFBQW5CLEdBQW1DRixNQUFNLENBQUNPLFVBQVAsQ0FDbENmLGtCQUFrQixDQUFDVyxNQURlLEVBRWxDWCxrQkFBa0IsQ0FBQ0MsT0FGZSxDQUFuQztBQUlBLEdBdEJ5QjtBQXVCMUJhLEVBQUFBLGVBdkIwQiwyQkF1QlZFLFFBdkJVLEVBdUJBO0FBQ3pCLFFBQUloQixrQkFBa0IsQ0FBQ0csV0FBbkIsR0FBaUMsRUFBckMsRUFBeUM7QUFDeENjLE1BQUFBLFdBQVcsQ0FBQ0MsZUFBWixDQUE0QkMsZUFBZSxDQUFDQyxjQUE1QztBQUNBQyxNQUFBQSxlQUFlLENBQUNDLGFBQWhCLENBQThCQyxXQUE5QixDQUEwQyxTQUExQztBQUNBRixNQUFBQSxlQUFlLENBQUNHLFFBQWhCLENBQXlCRCxXQUF6QixDQUFxQyxTQUFyQztBQUNBZixNQUFBQSxNQUFNLENBQUNDLFlBQVAsQ0FBb0JULGtCQUFrQixDQUFDVSxhQUF2QztBQUNBOztBQUNELFFBQUlNLFFBQVEsS0FBS1MsU0FBYixJQUEwQkMsTUFBTSxDQUFDQyxJQUFQLENBQVlYLFFBQVosRUFBc0JZLE1BQXRCLEtBQWlDLENBQS9ELEVBQWtFO0FBQ2pFNUIsTUFBQUEsa0JBQWtCLENBQUNHLFdBQW5CLElBQWtDLENBQWxDO0FBQ0E7QUFDQTs7QUFDRCxRQUFJYSxRQUFRLENBQUNhLFFBQVQsS0FBc0IsaUJBQTFCLEVBQTZDO0FBQzVDLFVBQU1DLFFBQVEsR0FBR1QsZUFBZSxDQUFDRyxRQUFoQixDQUF5Qk8sSUFBekIsQ0FBOEIsV0FBOUIsRUFBMkMsVUFBM0MsQ0FBakI7QUFDQW5CLE1BQUFBLE1BQU0sQ0FBQ29CLHNCQUFQLENBQThCaEMsa0JBQWtCLENBQUNLLFFBQWpELEVBQTJEeUIsUUFBM0QsRUFBcUVULGVBQWUsQ0FBQ1ksa0JBQXJGO0FBQ0F6QixNQUFBQSxNQUFNLENBQUNDLFlBQVAsQ0FBb0JULGtCQUFrQixDQUFDVSxhQUF2QztBQUNBLEtBSkQsTUFJTyxJQUFJTSxRQUFRLENBQUNhLFFBQVQsS0FBc0JKLFNBQTFCLEVBQXFDO0FBQzNDekIsTUFBQUEsa0JBQWtCLENBQUNHLFdBQW5CLEdBQWlDLENBQWpDO0FBQ0EsS0FGTSxNQUVBO0FBQ05ILE1BQUFBLGtCQUFrQixDQUFDRyxXQUFuQixJQUFrQyxDQUFsQztBQUNBO0FBQ0Q7QUEzQ3lCLENBQTNCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIE1pa29QQlggLSBmcmVlIHBob25lIHN5c3RlbSBmb3Igc21hbGwgYnVzaW5lc3NcbiAqIENvcHlyaWdodCAoQykgMjAxNy0yMDIzIEFsZXhleSBQb3J0bm92IGFuZCBOaWtvbGF5IEJla2V0b3ZcbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb247IGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uXG4gKiBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICovXG4vKiBnbG9iYWwgZ2xvYmFsVHJhbnNsYXRlLCAgUGJ4QXBpICovXG5cbmNvbnN0IG1lcmdpbmdDaGVja1dvcmtlciA9IHtcblx0dGltZU91dDogMzAwMCxcblx0dGltZU91dEhhbmRsZTogJycsXG5cdGVycm9yQ291bnRzOiAwLFxuXHRmaWxlSUQ6IG51bGwsXG5cdGZpbGVQYXRoOiAnJyxcblx0aW5pdGlhbGl6ZShmaWxlSUQsIGZpbGVQYXRoKSB7XG5cdFx0Ly8g0JfQsNC/0YPRgdGC0LjQvCDQvtCx0L3QvtCy0LvQtdC90LjQtSDRgdGC0LDRgtGD0YHQsCDQv9GA0L7QstCw0LnQtNC10YDQsFxuXHRcdG1lcmdpbmdDaGVja1dvcmtlci5maWxlSUQgPSBmaWxlSUQ7XG5cdFx0bWVyZ2luZ0NoZWNrV29ya2VyLmZpbGVQYXRoID0gZmlsZVBhdGg7XG5cdFx0bWVyZ2luZ0NoZWNrV29ya2VyLnJlc3RhcnRXb3JrZXIoZmlsZUlEKTtcblx0fSxcblx0cmVzdGFydFdvcmtlcigpIHtcblx0XHR3aW5kb3cuY2xlYXJUaW1lb3V0KG1lcmdpbmdDaGVja1dvcmtlci50aW1lb3V0SGFuZGxlKTtcblx0XHRtZXJnaW5nQ2hlY2tXb3JrZXIud29ya2VyKCk7XG5cdH0sXG5cdHdvcmtlcigpIHtcblx0XHRQYnhBcGkuRmlsZXNHZXRTdGF0dXNVcGxvYWRGaWxlKG1lcmdpbmdDaGVja1dvcmtlci5maWxlSUQsIG1lcmdpbmdDaGVja1dvcmtlci5jYkFmdGVyUmVzcG9uc2UpO1xuXHRcdG1lcmdpbmdDaGVja1dvcmtlci50aW1lb3V0SGFuZGxlID0gd2luZG93LnNldFRpbWVvdXQoXG5cdFx0XHRtZXJnaW5nQ2hlY2tXb3JrZXIud29ya2VyLFxuXHRcdFx0bWVyZ2luZ0NoZWNrV29ya2VyLnRpbWVPdXQsXG5cdFx0KTtcblx0fSxcblx0Y2JBZnRlclJlc3BvbnNlKHJlc3BvbnNlKSB7XG5cdFx0aWYgKG1lcmdpbmdDaGVja1dvcmtlci5lcnJvckNvdW50cyA+IDEwKSB7XG5cdFx0XHRVc2VyTWVzc2FnZS5zaG93TXVsdGlTdHJpbmcoZ2xvYmFsVHJhbnNsYXRlLnNmX1VwbG9hZEVycm9yKTtcblx0XHRcdHNvdW5kRmlsZU1vZGlmeS4kc3VibWl0QnV0dG9uLnJlbW92ZUNsYXNzKCdsb2FkaW5nJyk7XG5cdFx0XHRzb3VuZEZpbGVNb2RpZnkuJGZvcm1PYmoucmVtb3ZlQ2xhc3MoJ2xvYWRpbmcnKTtcblx0XHRcdHdpbmRvdy5jbGVhclRpbWVvdXQobWVyZ2luZ0NoZWNrV29ya2VyLnRpbWVvdXRIYW5kbGUpO1xuXHRcdH1cblx0XHRpZiAocmVzcG9uc2UgPT09IHVuZGVmaW5lZCB8fCBPYmplY3Qua2V5cyhyZXNwb25zZSkubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRtZXJnaW5nQ2hlY2tXb3JrZXIuZXJyb3JDb3VudHMgKz0gMTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0aWYgKHJlc3BvbnNlLmRfc3RhdHVzID09PSAnVVBMT0FEX0NPTVBMRVRFJykge1xuXHRcdFx0Y29uc3QgY2F0ZWdvcnkgPSBzb3VuZEZpbGVNb2RpZnkuJGZvcm1PYmouZm9ybSgnZ2V0IHZhbHVlJywgJ2NhdGVnb3J5Jyk7XG5cdFx0XHRQYnhBcGkuU3lzdGVtQ29udmVydEF1ZGlvRmlsZShtZXJnaW5nQ2hlY2tXb3JrZXIuZmlsZVBhdGgsIGNhdGVnb3J5LCBzb3VuZEZpbGVNb2RpZnkuY2JBZnRlckNvbnZlcnRGaWxlKTtcblx0XHRcdHdpbmRvdy5jbGVhclRpbWVvdXQobWVyZ2luZ0NoZWNrV29ya2VyLnRpbWVvdXRIYW5kbGUpO1xuXHRcdH0gZWxzZSBpZiAocmVzcG9uc2UuZF9zdGF0dXMgIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0bWVyZ2luZ0NoZWNrV29ya2VyLmVycm9yQ291bnRzID0gMDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWVyZ2luZ0NoZWNrV29ya2VyLmVycm9yQ291bnRzICs9IDE7XG5cdFx0fVxuXHR9LFxufTtcbiJdfQ==