"use strict";

/*
 * MikoPBX - free phone system for small business
 * Copyright (C) 2017-2023 Alexey Portnov and Nikolay Beketov
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

/* global globalRootUrl,globalTranslate, Form, PbxApi, UserMessage */
var mailSettings = {
  $formObj: $('#mail-settings-form'),
  $checkBoxes: $('#mail-settings-form .checkbox'),
  $menuItems: $('#mail-settings-menu .item'),
  validateRules: {
    name: {
      identifier: 'name',
      rules: [{
        type: 'empty',
        prompt: globalTranslate.cq_ValidateNameEmpty
      }]
    }
  },
  initialize: function initialize() {
    mailSettings.$menuItems.tab();
    mailSettings.$checkBoxes.checkbox();
    mailSettings.initializeForm();
  },
  updateMailSettingsCallback: function updateMailSettingsCallback(response) {
    if (response.result === true) {
      mailSettings.$formObj.after("<div class=\"ui success message ajax\">".concat(globalTranslate.ms_TestEmailSubject, "</div>"));
      var testEmail = mailSettings.$formObj.form('get value', 'SystemNotificationsEmail');

      if (testEmail.length > 0) {
        var params = {
          email: testEmail,
          subject: globalTranslate.ms_TestEmailSubject,
          body: globalTranslate.ms_TestEmailBody,
          encode: ''
        };
        PbxApi.SendTestEmail(params, mailSettings.cbAfterEmailSend);
      }
    }
  },
  cbAfterEmailSend: function cbAfterEmailSend(message) {
    if (message === true) {
      UserMessage.showInformation(globalTranslate.ms_TestEmailSentSuccessfully);
    } else if (message.length > 0) {
      UserMessage.showMultiString(message);
    }
  },
  cbBeforeSendForm: function cbBeforeSendForm(settings) {
    var result = settings;
    result.data = mailSettings.$formObj.form('get values');
    return result;
  },
  cbAfterSendForm: function cbAfterSendForm(response) {
    if (response.success === true) {
      PbxApi.UpdateMailSettings(mailSettings.updateMailSettingsCallback);
    }
  },
  initializeForm: function initializeForm() {
    Form.$formObj = mailSettings.$formObj;
    Form.url = "".concat(globalRootUrl, "mail-settings/save");
    Form.validateRules = mailSettings.validateRules;
    Form.cbBeforeSendForm = mailSettings.cbBeforeSendForm;
    Form.cbAfterSendForm = mailSettings.cbAfterSendForm;
    Form.initialize();
  }
};
$(document).ready(function () {
  mailSettings.initialize();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9NYWlsU2V0dGluZ3MvbWFpbC1zZXR0aW5ncy1tb2RpZnkuanMiXSwibmFtZXMiOlsibWFpbFNldHRpbmdzIiwiJGZvcm1PYmoiLCIkIiwiJGNoZWNrQm94ZXMiLCIkbWVudUl0ZW1zIiwidmFsaWRhdGVSdWxlcyIsIm5hbWUiLCJpZGVudGlmaWVyIiwicnVsZXMiLCJ0eXBlIiwicHJvbXB0IiwiZ2xvYmFsVHJhbnNsYXRlIiwiY3FfVmFsaWRhdGVOYW1lRW1wdHkiLCJpbml0aWFsaXplIiwidGFiIiwiY2hlY2tib3giLCJpbml0aWFsaXplRm9ybSIsInVwZGF0ZU1haWxTZXR0aW5nc0NhbGxiYWNrIiwicmVzcG9uc2UiLCJyZXN1bHQiLCJhZnRlciIsIm1zX1Rlc3RFbWFpbFN1YmplY3QiLCJ0ZXN0RW1haWwiLCJmb3JtIiwibGVuZ3RoIiwicGFyYW1zIiwiZW1haWwiLCJzdWJqZWN0IiwiYm9keSIsIm1zX1Rlc3RFbWFpbEJvZHkiLCJlbmNvZGUiLCJQYnhBcGkiLCJTZW5kVGVzdEVtYWlsIiwiY2JBZnRlckVtYWlsU2VuZCIsIm1lc3NhZ2UiLCJVc2VyTWVzc2FnZSIsInNob3dJbmZvcm1hdGlvbiIsIm1zX1Rlc3RFbWFpbFNlbnRTdWNjZXNzZnVsbHkiLCJzaG93TXVsdGlTdHJpbmciLCJjYkJlZm9yZVNlbmRGb3JtIiwic2V0dGluZ3MiLCJkYXRhIiwiY2JBZnRlclNlbmRGb3JtIiwic3VjY2VzcyIsIlVwZGF0ZU1haWxTZXR0aW5ncyIsIkZvcm0iLCJ1cmwiLCJnbG9iYWxSb290VXJsIiwiZG9jdW1lbnQiLCJyZWFkeSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBRUEsSUFBTUEsWUFBWSxHQUFHO0FBQ3BCQyxFQUFBQSxRQUFRLEVBQUVDLENBQUMsQ0FBQyxxQkFBRCxDQURTO0FB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QUFBQSxJQUFJLENBQUNILGVBQUwsR0FBdUIxQyxZQUFZLENBQUMwQyxlQUFwQztBQUNBRyxJQUFBQSxJQUFJLENBQUNoQyxVQUFMO0FBQ0E7QUEzRG1CLENBQXJCO0FBOERBWCxDQUFDLENBQUM4QyxRQUFELENBQUQsQ0FBWUMsS0FBWixDQUFrQixZQUFNO0FBQ3ZCakQsRUFBQUEsWUFBWSxDQUFDYSxVQUFiO0FBQ0EsQ0FGRCIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBNaWtvUEJYIC0gZnJlZSBwaG9uZSBzeXN0ZW0gZm9yIHNtYWxsIGJ1c2luZXNzXG4gKiBDb3B5cmlnaHQgKEMpIDIwMTctMjAyMyBBbGV4ZXkgUG9ydG5vdiBhbmQgTmlrb2xheSBCZWtldG92XG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uOyBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLlxuICogSWYgbm90LCBzZWUgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqL1xuXG4vKiBnbG9iYWwgZ2xvYmFsUm9vdFVybCxnbG9iYWxUcmFuc2xhdGUsIEZvcm0sIFBieEFwaSwgVXNlck1lc3NhZ2UgKi9cblxuY29uc3QgbWFpbFNldHRpbmdzID0ge1xuXHQkZm9ybU9iajogJCgnI21haWwtc2V0dGluZ3MtZm9ybScpLFxuXHQkY2hlY2tCb3hlczogJCgnI21haWwtc2V0dGluZ3MtZm9ybSAuY2hlY2tib3gnKSxcblx0JG1lbnVJdGVtczogJCgnI21haWwtc2V0dGluZ3MtbWVudSAuaXRlbScpLFxuXHR2YWxpZGF0ZVJ1bGVzOiB7XG5cdFx0bmFtZToge1xuXHRcdFx0aWRlbnRpZmllcjogJ25hbWUnLFxuXHRcdFx0cnVsZXM6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHR5cGU6ICdlbXB0eScsXG5cdFx0XHRcdFx0cHJvbXB0OiBnbG9iYWxUcmFuc2xhdGUuY3FfVmFsaWRhdGVOYW1lRW1wdHksXG5cdFx0XHRcdH0sXG5cdFx0XHRdLFxuXHRcdH0sXG5cdH0sXG5cdGluaXRpYWxpemUoKSB7XG5cdFx0bWFpbFNldHRpbmdzLiRtZW51SXRlbXMudGFiKCk7XG5cdFx0bWFpbFNldHRpbmdzLiRjaGVja0JveGVzLmNoZWNrYm94KCk7XG5cdFx0bWFpbFNldHRpbmdzLmluaXRpYWxpemVGb3JtKCk7XG5cdH0sXG5cdHVwZGF0ZU1haWxTZXR0aW5nc0NhbGxiYWNrKHJlc3BvbnNlKSB7XG5cdFx0aWYgKHJlc3BvbnNlLnJlc3VsdCA9PT0gdHJ1ZSkge1xuXHRcdFx0bWFpbFNldHRpbmdzLiRmb3JtT2JqLmFmdGVyKGA8ZGl2IGNsYXNzPVwidWkgc3VjY2VzcyBtZXNzYWdlIGFqYXhcIj4ke2dsb2JhbFRyYW5zbGF0ZS5tc19UZXN0RW1haWxTdWJqZWN0fTwvZGl2PmApO1xuXHRcdFx0Y29uc3QgdGVzdEVtYWlsID0gbWFpbFNldHRpbmdzLiRmb3JtT2JqLmZvcm0oJ2dldCB2YWx1ZScsICdTeXN0ZW1Ob3RpZmljYXRpb25zRW1haWwnKTtcblx0XHRcdGlmICh0ZXN0RW1haWwubGVuZ3RoID4gMCkge1xuXHRcdFx0XHRjb25zdCBwYXJhbXMgPSB7XG5cdFx0XHRcdFx0ZW1haWw6IHRlc3RFbWFpbCxcblx0XHRcdFx0XHRzdWJqZWN0OiBnbG9iYWxUcmFuc2xhdGUubXNfVGVzdEVtYWlsU3ViamVjdCxcblx0XHRcdFx0XHRib2R5OiBnbG9iYWxUcmFuc2xhdGUubXNfVGVzdEVtYWlsQm9keSxcblx0XHRcdFx0XHRlbmNvZGU6ICcnLFxuXHRcdFx0XHR9O1xuXHRcdFx0XHRQYnhBcGkuU2VuZFRlc3RFbWFpbChwYXJhbXMsIG1haWxTZXR0aW5ncy5jYkFmdGVyRW1haWxTZW5kKTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cdGNiQWZ0ZXJFbWFpbFNlbmQobWVzc2FnZSkge1xuXHRcdGlmIChtZXNzYWdlID09PSB0cnVlKSB7XG5cdFx0XHRVc2VyTWVzc2FnZS5zaG93SW5mb3JtYXRpb24oZ2xvYmFsVHJhbnNsYXRlLm1zX1Rlc3RFbWFpbFNlbnRTdWNjZXNzZnVsbHkpO1xuXHRcdH0gZWxzZSBpZiAobWVzc2FnZS5sZW5ndGggPiAwKSB7XG5cdFx0XHRVc2VyTWVzc2FnZS5zaG93TXVsdGlTdHJpbmcobWVzc2FnZSk7XG5cdFx0fVxuXHR9LFxuXHRjYkJlZm9yZVNlbmRGb3JtKHNldHRpbmdzKSB7XG5cdFx0Y29uc3QgcmVzdWx0ID0gc2V0dGluZ3M7XG5cdFx0cmVzdWx0LmRhdGEgPSBtYWlsU2V0dGluZ3MuJGZvcm1PYmouZm9ybSgnZ2V0IHZhbHVlcycpO1xuXHRcdHJldHVybiByZXN1bHQ7XG5cdH0sXG5cdGNiQWZ0ZXJTZW5kRm9ybShyZXNwb25zZSkge1xuXHRcdGlmIChyZXNwb25zZS5zdWNjZXNzID09PSB0cnVlKSB7XG5cdFx0XHRQYnhBcGkuVXBkYXRlTWFpbFNldHRpbmdzKG1haWxTZXR0aW5ncy51cGRhdGVNYWlsU2V0dGluZ3NDYWxsYmFjayk7XG5cdFx0fVxuXHR9LFxuXHRpbml0aWFsaXplRm9ybSgpIHtcblx0XHRGb3JtLiRmb3JtT2JqID0gbWFpbFNldHRpbmdzLiRmb3JtT2JqO1xuXHRcdEZvcm0udXJsID0gYCR7Z2xvYmFsUm9vdFVybH1tYWlsLXNldHRpbmdzL3NhdmVgO1xuXHRcdEZvcm0udmFsaWRhdGVSdWxlcyA9IG1haWxTZXR0aW5ncy52YWxpZGF0ZVJ1bGVzO1xuXHRcdEZvcm0uY2JCZWZvcmVTZW5kRm9ybSA9IG1haWxTZXR0aW5ncy5jYkJlZm9yZVNlbmRGb3JtO1xuXHRcdEZvcm0uY2JBZnRlclNlbmRGb3JtID0gbWFpbFNldHRpbmdzLmNiQWZ0ZXJTZW5kRm9ybTtcblx0XHRGb3JtLmluaXRpYWxpemUoKTtcblx0fSxcbn07XG5cbiQoZG9jdW1lbnQpLnJlYWR5KCgpID0+IHtcblx0bWFpbFNldHRpbmdzLmluaXRpYWxpemUoKTtcbn0pO1xuIl19